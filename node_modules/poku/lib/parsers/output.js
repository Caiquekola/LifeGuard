"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parserOutput = exports.isDebug = exports.isQuiet = void 0;
const poku_js_1 = require("../configs/poku.js");
const regex = {
    newLine: /\n/,
    ansi: /u001b\[0m|\n/i,
    skip: /\\u001b\[94m\\u001b\[1m◯/i,
    todo: /\\u001b\[96m\\u001b\[1m●/i,
};
const isQuiet = (configs) => typeof (configs === null || configs === void 0 ? void 0 : configs.quiet) === 'boolean' && Boolean(configs === null || configs === void 0 ? void 0 : configs.quiet);
exports.isQuiet = isQuiet;
const isDebug = (configs) => Boolean(configs === null || configs === void 0 ? void 0 : configs.debug);
exports.isDebug = isDebug;
const parserOutput = (options) => {
    const { output, result, configs } = options;
    const normalizedOutput = JSON.stringify(output);
    if (regex.skip.test(normalizedOutput)) {
        ++poku_js_1.results.skip;
    }
    if (regex.todo.test(normalizedOutput)) {
        ++poku_js_1.results.todo;
    }
    const debug = (0, exports.isDebug)(configs);
    const pad = (configs === null || configs === void 0 ? void 0 : configs.parallel) ? '  ' : '    ';
    const splittedOutput = output.split(regex.newLine);
    const outputs = (debug || !result
        ? splittedOutput
        : splittedOutput.filter((current) => {
            if (current.indexOf('Exited with code') !== -1) {
                return false;
            }
            return regex.ansi.test(JSON.stringify(current)) || current === '';
        })).filter((line) => (line === null || line === void 0 ? void 0 : line.trim().length) > 0);
    if (outputs.length === 0) {
        return;
    }
    return outputs.map((current) => `${pad}${current}`);
};
exports.parserOutput = parserOutput;
